
########### 18/9/2024 ################
-se trabaja con lombok
-interfaces funcionales: consumidor, predicado, funciones, productos, comparadores
-tenemos que manejar el optional -> not null
-saber colecciones:
        colecctions:list, set, hash, tree
        map:hash, tree
-vamos a sacar json binarios, xml.....
-programacion alto nivel -> usar libreria stream de java 

-las interfaces pueden tener una funciones default
-se crea una constante con file
-interfaces funcionales -> tienen solo una funcion
            consumidor: consumen datos 
            predicado: nos indican si cumple unas condiciones(nos devuelven un booleano)
            funcion: convierte un tipo de dato a otro 
            productos: genera datos
            comparadores:   comparan datos

-optional: es para guardad datos en una variable que puede o no estar vacia
-stream: me ayuda a la transformacion de datos
        -crear -> origen de los datos
        -transformar el dato
        -consumir
-tenemos que crear un proyecto maven donde pondremos en catalogo internal y usaremos el quickstart
-en groupid le ponemos el nombre del paquete
-en artifactid ponemos el nombre del proyecto
-se empezara a generar el proyecto y al rato escribir y "y" luego esperar a que termine
-builder es el patron que monta objetos(ha añadido a la clase un conjunto de funciones estaticas para construir la clase)
-depende si necesito orden o si admito duplicados usarare distintas tipos de colecciones
- si va a usar el singular una vez creado el objeto ya no se puede añadir objetos mas a la coleccion


############## 19/9/2024  #######################
-bi es para interfaces que aceptan dos datos o parametrosy hacen las acciones sobre estas 
-priimer lugar hay que decir cuales son los parametros que hay que  recibir
-

############## 2/10/2024  #######################

-el map es <clave , valor> 
-para hacer un stream de un map tengo que especificar que el stream tiene que tener clave valor con ENTRY
                ejemplo:
                //		Stream<Entry<String, Long>> alumnosPorCursoStream = alumnosPorCursoMap.entrySet().stream();

-para comparar los valores de un stream al usar un metodo como max hay que hacer lo siguiente:
                ejemplo:
                        ejemploMapStreams.max(Entry.comparingByValue((v1,v2)-> Long.compare(v1,v2)))
                        

-HACER LOS EJERCICIOS DE TRADERS, EL QUE PARECE EBAY(EL DE SUBASTAS),

-flatmap()


############## 9/10/2024  #######################
-openCSV es una libreria para cargar csv 5.7.1
-anotar clases primero con 
        @CSVBindByPosition(position=x)
-para leer se necesita 
        un nuevo builder que es el = new CsvToBeanBuilder(new FileReader("grupo.csv"))
                                                .withType(grupo.class)
                                                .withSeparator(":")
                                                .build()  -> para crear los objetos 
                                                .parse(); -> me devolvera una lista de grupos 


-necesito otra clase para leer cosas anidadas dentro de un csv
-estudiar opencsv y sus csv anidados
-si es un date @CsvDate("FORMATO") para indicar que es una fecha 
-tambien hay una anotacion @CsVCustomBind


Se desea acceder a los datos de una BBDD de institutos.
 Se conoce que de cada instituto se guarda su nombre, su código de centro, 
 su número de teléfono y presupuesto. Se distinguen los institutos por su código de centro.
  Además se guarda información sobre las personas que trabajan y estudian en él.


De cada persona se guarda sus teléfonos de contacto (compañía de telecomunicaciones, 
número de teléfono y sistema operativo), junto a estos datos también se guarda información sobre su nombre,
NIF ,fecha de nacimiento y en el caso de que te tengan vehículo se guarda su modelo, su color y su matrícula.
Se distinguen las personas por su NIF.



############## 10-10-2024 #######################
duda al profe-> es mejor crear un metodo en la clase padre para  sobrecargar un metodo a la hora de llamarlo desde una subclase o es mejor hacer el cast a la hora de llamar al metodo usando la clase?
el problema ocurrio en la clase almacen a la hora de eliminar productos.



se puede agregar un condicional a los csbvbtobindposition         @CSVBindByPosition(position=x , required /o/ regex)


############## 16-10-2024 #######################
xml
 -DOM (LO QUE VI EN DAW)ELEMENTOS PADRE HIJO Y DEMAS
 -SAX
 -ABX
 ECHAR UN VISTAZO A VALIDAR DTDS Y XLST SCHEMAS 
 

 ############## 17-10-2024 ####################
  

############## 18-10-2024 ####################
jabx-> 
los nombre de las etiquetas xml no tienen porque llamrse como como los atributos de las clases

El elemento raiz siempre es un wrapper

ANOTACIONES---------
@XmlRootElement // Podría ser un elemento raíz, no es necesaria
@XmlType (propOrder = { "nombre", "dept", "sueldo", "fechaNacimiento"}) // orden en el xml, sino es alfabético
@XmlAccessorType(XmlAccessType.FIELD) // Permite poner las anotaciones en lo atributos


@XmlAttribute //para indicar que el atributo de la clase es un atributo en xml

@XmlJavaTypeAdapter(LocalDateAdapter.class) //para indicar el adaptador de un tipo especial

@XmlElementWrapper(name="empleados") // Indicar que es un contenedor
@XmlElement(name="empleado") // elemento repetido del contenedor

@XmlTransient -> PARA IGNORAR ELEMENTOS

mostrar actores que han hecho peliculas posteriores al 2003




################# cosas pendientes #################
sacar la escritura del tipo fuera en el ejercicio de refuerzo2 los datos que son comunes entre deportistas(LISTO)
super.escribirDeportista(out)


tengo que hacer que al leer los datos se lea el objeto a si mismo, dicho de otra manera no tener de declarar las variables de nuevo y castear el objeto
(preguntar como saco el codigo repetido del if en caso de lectura de distinto caracter)




hacer que la app main se crea el objecto y se llame a si misma (LISTO)







######################### 17/11/2024  #############################
CREATE TABLE ALUMNOS(
NIA VARCHAR(45) PRIMARY KEY,
NOMBRE VARCHAR(255),
FECHANACIMIENTO DATE,
BECA BOOLEAN,
CURSO VARCHAR(45) DEFAULT 'SIN',
FOREIGN KEY (CURSO) REFERENCES GRUPOS (NOMBRE)
);

CREATE TABLE GRUPOS(
NOMBRE VARCHAR(45) PRIMARY KEY,
TUTOR VARCHAR(45),
CURSO INT
);



############## 20/11/24 ###################
-JPA CON HIBERNATE
